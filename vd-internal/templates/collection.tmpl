<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Proto Vending Machine</title>
    <link rel="stylesheet" href="https://unpkg.com/spectre.css/dist/spectre.min.css">
    <link rel="stylesheet" href="https://unpkg.com/spectre.css/dist/spectre-exp.min.css">
    <link rel="stylesheet" href="https://unpkg.com/spectre.css/dist/spectre-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js"></script>
    <script>
      // Set the default CSS theme and icon library globally
      JSONEditor.defaults.theme = 'spectre';
      JSONEditor.defaults.iconlib = 'spectre';
      </script>
    <style>
      .container {
        max-width:960px;
        margin: 0 auto
      }
    </style>
  </head>
  <body>
    <div class='container'>
      <div class='columns'>
        <h1 class='col-md-12'>Proto Vending Machine</h1>
      </div>
      <div id='editor_holder'></div>
      <button id='submit'>Save & Apply</button>
      <span id='valid_indicator' class='label'></span>  
    </div>
    
    <script>
      var the_start_val = JSON.parse({{ .consumerSelectionPreviousJson }})
      var the_json_schema = JSON.parse({{ .productsSchemaJson }})

      // Initialize the editor
      var editor = new JSONEditor(document.getElementById('editor_holder'),{
        // Enable fetching schemas via ajax
        ajax: true,
        
        // The schema for the editor
        schema: the_json_schema,
        
        // Seed the form with a starting value
        startval: the_start_val,
        disable_edit_json: true,
        disable_properties: true,
        disable_array_reorder: true,
        array_controls_top: true,
        disable_array_delete_all_rows: true,
        disable_array_delete_last_row: true,
        prompt_before_delete: true
      });

      // Hook up the submit button to log to the console
      document.getElementById('submit').addEventListener('click',function() {
        // Get consumerSelectionNewJson from the value of the editor
        var consumerSelectionNewJson = editor.getValue()
        console.log(consumerSelectionNewJson);
        
        
        // post_path will be the same as the current get url-path
        // Ex: current url-path "collection/alpha" => post_path "collection/alpha" 
        var post_path = window.location.pathname
        fetch(post_path, {
          method: "POST",
          headers: {'Content-Type': 'application/json'}, 
          body: JSON.stringify(consumerSelectionNewJson)
        }).then(res => {
          console.log("POST complete! response:", res);
        });
      });

      // Hook up the validation indicator to update its 
      // status whenever the editor changes
      editor.on('change',function() {
        // Get an array of errors from the validator
        var errors = editor.validate();
        
        var indicator = document.getElementById('valid_indicator');
        
        // Not valid
        if(errors.length) {
          indicator.className = 'label alert';
          indicator.textContent = 'not valid syntax';
        }
        // Valid
        else {
          indicator.className = 'label success';
          indicator.textContent = 'valid syntax';
        }
      });
    </script>
  </body>
</html>
