#!/usr/bin/env bash
# Paulo Aleixo Campos
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
function shw_info { echo -e '\033[1;34m'"$1"'\033[0m'; }
function error { echo "ERROR in ${1}"; exit 99; }
trap 'error $LINENO' ERR
#exec > >(tee -i /tmp/$(date +%Y%m%d%H%M%S.%N)__$(basename $0).log ) 2>&1
PS4='████████████████████████${BASH_SOURCE}@${FUNCNAME[0]:-}[${LINENO}]>  '
set -o errexit
set -o pipefail
set -o nounset
#set -o xtrace

# check selection_previous_jsonfile is readable
# check selection_previous_jsonfile is writeable
assemble_check_selectionfiles_permitions() {
    local selection_previous_jsonfile="${1}"; shift 1
    if [ ! -r "${selection_previous_jsonfile}" ]
    then
        echo "ERROR: cannot read selection_previous_jsonfile '$selection_previous_jsonfile'"
        exit 11
    elif [ ! -w "${selection_previous_jsonfile}" ]
    then
        echo "ERROR: cannot write selection_previous_jsonfile '$selection_previous_jsonfile'"
        exit 12
    fi
}


# check selection_previous_jsonfile is readable
# check selection_next_jsonfile is readable
# check selection_next_jsonfile is writeable
execute_check_selectionfiles_permitions() {
    local selection_previous_jsonfile="${1}"; shift 1
    local selection_next_jsonfile="${1}"; shift 1
    if [ ! -r "${selection_previous_jsonfile}" ]
    then
        echo "ERROR: cannot read selection_previous_jsonfile '$selection_previous_jsonfile'"
        exit 1
    elif [ ! -r "${selection_next_jsonfile}" ]
    then
        echo "ERROR: cannot read selection_next_jsonfile '$selection_next_jsonfile'"
        exit 2
    elif [ ! -w "${selection_next_jsonfile}" ]
    then
        echo "ERROR: cannot write selection_next_jsonfile '$selection_next_jsonfile'"
        exit 3
    fi
}



assemble() {
  local selection_previous_jsonfile="${1}"; shift 1

  assemble_check_selectionfiles_permitions  "${selection_previous_jsonfile}" 
  # TODO

  exit 0
}

execute() {
  local selection_previous_jsonfile="${1}"; shift 1
  local selection_next_jsonfile="${1}"; shift 1

  execute_check_selectionfiles_permitions  "${selection_previous_jsonfile}" "${selection_next_jsonfile}"

#   sleep 120
#   echo "sleep and all good"
#   exit 0

#   find /tmp -ls || true
#   env

#   echo "Crash boom bang stdout"
#   echo "Crash boom bang stderr" 1>&2
#   exit 1
    exit 0
}


main() {
    # read arguments
    arg1="${1:-}" 
    arg2="${2:-}" 
    arg3="${3:-}" 

    if [[ "${arg1}" == "assemble" ]]
    then
        local selection_previous_jsonfile="${arg2}"
        assemble "${selection_previous_jsonfile}"
    
    elsif [[ "${arg1}" == "execute" ]]
        local selection_previous_jsonfile="${arg2}"
        local selection_next_jsonfile="${arg3}"
        execute "${selection_previous_jsonfile}" "${selection_next_jsonfile}"
    else
        :
    fi
}
main "$@"
